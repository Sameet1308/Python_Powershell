import boto3
import json

def lambda_handler(event, context):
    try:
        source_database_name = 'source_database_name'
        target_database_name = 'target_database_name'

        # Initialize the Glue client in the source account
        source_glue_client = boto3.client('glue')

        # Initialize the Glue client in the target account
        target_glue_client = boto3.client('glue')

        # Get the list of tables in the source database
        response = source_glue_client.get_tables(DatabaseName=source_database_name)
        tables = response['TableList']

        for table in tables:
            table_definition = table

            # Modify the table definition to fit the target Glue catalog
            table_definition['DatabaseName'] = target_database_name
            table_definition.pop('CreateTime', None)
            table_definition.pop('UpdateTime', None)
            table_definition.pop('CreatedBy', None)
            table_definition.pop('IsRegisteredWithLakeFormation', None)

            # Create the table in the target Glue catalog
            try:
                target_glue_client.create_table(
                    DatabaseName=target_database_name,
                    TableInput=table_definition
                )
                print(f"Table {table['Name']} copied successfully.")
            except Exception as e:
                print(f"Error copying table {table['Name']}: {str(e)}")
        
        return {
            'statusCode': 200,
            'body': json.dumps(f'All tables from {source_database_name} copied to {target_database_name}')
        }
    
    except Exception as e:
        error_message = f"An error occurred: {str(e)}"
        print(error_message)
        return {
            'statusCode': 500,
            'body': json.dumps(error_message)
        }
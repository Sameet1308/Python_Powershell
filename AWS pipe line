import boto3
import json
import logging

logger = logging.getLogger()
logger.setLevel(logging.INFO)

def create_table_in_glue(database_name, table_name):
    glue_client = boto3.client('glue')
    try:
        glue_client.create_table(
            DatabaseName=database_name,
            TableInput={
                'Name': table_name,
                'StorageDescriptor': {
                    'Columns': [
                        {'Name': 'id', 'Type': 'int'},
                        {'Name': 'name', 'Type': 'string'}
                    ],
                    'Compressed': False,
                    'NumberOfBuckets': -1,
                    'SerdeInfo': {
                        'SerializationLibrary': 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe',
                        'Parameters': {'serialization.format': '1'}
                    },
                    'StoredAsSubDirectories': False
                },
                'TableType': 'EXTERNAL_TABLE',
                'Parameters': {
                    'EXTERNAL': 'TRUE'
                }
            }
        )
        logger.info(f"Table {table_name} created successfully in database {database_name}.")
    except Exception as e:
        logger.error(f"Error creating table: {str(e)}")

def lambda_handler(event, context):
    # Define the parameters
    database_name = 'TARGET_DATABASE_NAME'
    table_name = 'NEW_TABLE_NAME'
    
    # Create table in Glue
    create_table_in_glue(database_name, table_name)
    
    return {
        'statusCode': 200,
        'body': json.dumps('Table creation triggered successfully')
    }
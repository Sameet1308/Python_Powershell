import boto3
import time

def lambda_handler(event, context):
    source_glue = boto3.client('glue', region_name='source_region')
    target_glue = boto3.client('glue', region_name='target_region')

    source_database = 'source_database_name'
    target_database = 'target_database_name'
    table_name = 'your_table_name'  # This can be dynamically obtained if needed

    # Extract table metadata from the source Glue catalog
    source_table = get_table_metadata(source_glue, source_database, table_name)

    # Prepare TableInput for the target table
    table_input = {
        'Name': source_table['Name'],
        'StorageDescriptor': source_table['StorageDescriptor'],
        'PartitionKeys': source_table.get('PartitionKeys', []),
        'TableType': source_table.get('TableType', 'EXTERNAL_TABLE'),
        'Parameters': source_table.get('Parameters', {})
    }

    # Create the table in the target Glue database
    create_table_in_glue(target_glue, target_database, table_input)

def get_table_metadata(glue_client, database_name, table_name):
    response = glue_client.get_table(
        DatabaseName=database_name,
        Name=table_name
    )
    return response['Table']

def create_table_in_glue(glue_client, database_name, table_input):
    try:
        glue_client.create_table(
            DatabaseName=database_name,
            TableInput=table_input
        )
        print(f"Table {table_input['Name']} created successfully in database {database_name}")
    except glue_client.exceptions.AlreadyExistsException:
        print(f"Table {table_input['Name']} already exists in database {database_name}")
    except Exception as e:
        print(f"Error creating table: {e}")
import requests

def create_session(base_url, username, password, login_mode=1):
    """Create a session in MicroStrategy."""
    url = f"{base_url}/api/auth/login"
    payload = {
        "username": username,
        "password": password,
        "loginMode": login_mode
    }
    headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
    }
    response = requests.post(url, json=payload, headers=headers)
    if response.ok:
        return response.headers['X-MSTR-AuthToken']
    else:
        raise Exception(f"Failed to create session: {response.text}")

def get_project_id(base_url, auth_token, project_name):
    """Get the project ID by project name."""
    url = f"{base_url}/api/projects"
    headers = {
        'X-MSTR-AuthToken': auth_token,
        'Accept': 'application/json'
    }
    response = requests.get(url, headers=headers)
    if response.ok:
        projects = response.json()
        for project in projects:
            if project['name'] == project_name:
                return project['id']
        return None
    else:
        raise Exception(f"Failed to get projects: {response.text}")

def end_session(base_url, auth_token):
    """End the session in MicroStrategy."""
    url = f"{base_url}/api/auth/logout"
    headers = {
        'X-MSTR-AuthToken': auth_token,
        'Accept': 'application/json'
    }
    response = requests.post(url, headers=headers)
    if not response.ok:
        raise Exception(f"Failed to end session: {response.text}")

# Example usage
base_url = "https://your-microstrategy-server"
username = "your-username"
password = "your-password"
project_name = "your-project-name"

try:
    # Create session
    auth_token = create_session(base_url, username, password)
    print("Session created.")

    # Get project ID
    project_id = get_project_id(base_url, auth_token, project_name)
    if project_id:
        print(f"Project ID for '{project_name}': {project_id}")
    else:
        print(f"Project '{project_name}' not found.")

    # End session
    end_session(base_url, auth_token)
    print("Session ended.")
except Exception as e:
    print(str(e))
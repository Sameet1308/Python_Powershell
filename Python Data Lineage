import requests
import pandas as pd
from datetime import datetime

# ... [rest of the parameters] ...

#### FUNCTIONS ###
def login(base_url, api_login, api_password, login_mode):
    print("Getting token...")
    data_get = {'username': api_login, 'password': api_password, 'loginMode': login_mode}
    r = requests.post(base_url + 'auth/login', data=data_get)
    if r.ok:
        authToken = r.headers.get('X-MSTR-AuthToken')
        cookies = r.cookies.get_dict()
        print("Token: " + authToken)
        return authToken, cookies
    else:
        print("HTTP %i - %s, Message %s" % (r.status_code, r.reason, r.text))
        return None, None  # Return None to signal that login failed

def quickSearch(base_url, auth_token, cookies, project_id, root_folder, object_type, get_ancestors, limit_search):
    headers = set_headers(auth_token, project_id)
    search_url = (base_url  + "searches/results?" + "root=" + root_folder + "&type=" + str(object_type)
                  + "&getAncestors=" + get_ancestors + "&limit=" + str(limit_search))
    print("Quick Search...")
    r = requests.get(search_url, headers=headers, cookies=cookies)
    if r.ok:
        print("Total Items: " + str(r.json().get('totalItems', 'Unknown')))
        return r.json()
    else:
        print("HTTP %i - %s, Message %s" % (r.status_code, r.reason, r.text))
        return None  # Return None to signal that the search failed

def main():
    authToken, cookies = login(base_url, api_login, api_password, login_mode)
    if authToken is None:
        print("Login failed. Exiting program.")
        return

    #### Quick Search
    search_result = quickSearch(base_url, authToken, cookies, project_id, root_folder, object_type, get_ancestors, limit_search)
    if search_result is None:
        print("Quick search failed. Exiting program.")
        return

    list_search = search_result.get('result')  # Ensure 'result' key exists
    if not list_search:  # Check if 'result' is empty or not present
        print("No results found or an error occurred while retrieving the search results.")
        return

    # ... [rest of the code] ...

### Main program    
main()
import re

def parse_qlikview_logs(log_file):
  """
  Parses a QlikView log file and extracts information about data access. 

  Args:
      log_file (str): Path to the QlikView log file.

  Returns:
      list: List of dictionaries containing extracted information.
  """
  data = []
  with open(log_file, 'r') as f:
    # Skip header line
    next(f)
    for line in f:
      # Split line by tabs
      parts = line.strip().split('\t')
      # Focus on data load messages
      if any(word in parts[1] for word in ["Data load started", "Loaded data from"]):
        # Extract document name (optional)
        document = parts[0] if parts[0] else None
        # Extract table/file name (heuristic)
        table_name = re.findall(r"(?<=from )\w+", parts[1], re.IGNORECASE)
        # Potential column names (heuristic)
        columns = re.findall(r"(?<=loaded )\w+(?=,|$)", parts[1], re.IGNORECASE)
        data.append({
          "document": document,
          "table_name": table_name[0] if table_name else None,
          "columns": columns
        })
  return data

# Example usage
log_data = parse_qlikview_logs("path/to/your/qlikview.log")

# Print extracted information
for entry in log_data:
  print(f"Document: {entry['document']}")
  print(f"Table: {entry['table_name']}")
  print(f"Columns: {', '.join(entry['columns'])}\n")
